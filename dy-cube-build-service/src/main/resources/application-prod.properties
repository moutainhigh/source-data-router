#server.context-path=/msys
server.port=8095
#求和响应http头的最大大小
server.maxHttpHeaderSize=8192
server.connectionTimeout=30000
#开启压缩
server.compression.enabled=true
#压缩文件类型 
server.compression.mimeTypes=text/html,text/xml,text/css,application/javascript,text/plain
#需要执行压缩大小byte
server.compression.minResponseSize=2048
#处理请求线程最大数目
server.tomcat.maxThreads=400
#默认初始化和保持空闲的线程数
server.tomcat.minSpareThreads=100
server.tomcat.uriEncoding=UTF-8
#接受和处理的最大连接数
server.tomcat.maxConnections=400
#当tomcat起动的线程数达到最大时，接受排队的请求个数
server.tomcat.acceptCount=400

#mybatis配置
#mybatis.mapperLocations=classpath:mapper/*.xml
#mybatis.typeAliasesPackage=com.globalegrow.plan.mapper.plan
#日志
#logging.config=classpath:logback-spring.xml
#logging.path=/usr/local/services/java_application/kylincubebuilttask/logs

#热部署生效
spring.devtools.restart.enabled=true
#classpath目录下的WEB-INF文件夹内容修改不重启
spring.devtools.restart.exclude=WEB-INF/**

spring.jmx.enabled=true
endpoints.jmx.enabled=true
#cube构建地址
#kylin.cube.url=http://52.202.56.79:17070/kylin/api/cubes
kylin.cube.url=http://172.31.25.19:7070/kylin/api/cubes
kylin.url=http://172.31.25.19:7070

#用户名:密码连接起来的base64
kylin.cube.authorization=QURNSU46RHlAYWkyMDE4
#触发自动构建bts报表时间周期
bts.report.cubebuild.cron=0 0/10 * * * ?
#要构建的cube名称   格式：cube名称1|是否开启,cube名称2|是否开启（true开启，false关闭）  比如 bts_report1_cude|true,bts_report2_cude|false
bts.report.cubenames= bts_report1_cude|false
#触发自动构建推荐报表时间周期
#recommend.report.cubebuild.cron=0 0/5 * * * ?
#要构建的cube名称   格式：cube名称1|是否开启,cube名称2|是否开启（true开启，false关闭）  比如 bts_report1_cude|true,bts_report2_cude|false
#recommend.report.cubenames=recommend_click_cube|false,recommend_exp_cube|false,recommend_pv_cube|false,recommend_uv_cube|false
scheduler.pool-size=20

#数据源
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://glbg_all_prd_mysql_m.gw-internel.com:3308/aidy_db?useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=aidy_RW
spring.datasource.password=70rRidTio4cJ9A0B

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.druid.initialSize=50
spring.datasource.druid.minIdle=20
spring.datasource.druid.maxActive=200
# 配置获取连接等待超时的时间,单位毫秒
spring.datasource.druid.maxWait=3000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
spring.datasource.druid.removeAbandoned=true  
spring.datasource.druid.removeAbandonedTimeout=1800 
# 配置一个连接在池中最小生存的时间，单位是毫秒 
spring.datasource.druid.minEvictableIdleTimeMillis=1800000
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小 
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=200
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
spring.datasource.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true




